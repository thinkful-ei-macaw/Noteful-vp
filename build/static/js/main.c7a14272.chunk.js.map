{"version":3,"sources":["ApiContext.js","config.js","AddNote/AddNote.js","AddFolder/AddFolder.js","CircleButton/CircleButton.js","notes-helpers.js","ErrorBoundary.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","App/App.js","index.js"],"names":["React","createContext","notes","folders","addFolder","addNote","deleteNote","getNotes","config","API_ENDPOINT","AddNote","state","nameNote","value","folderId","content","validateNoteName","event","preventDefault","_this","handleAddNote","alert","_this2","this","fetch","concat","method","headers","Content-Type","body","JSON","stringify","name","modified","Date","folder_id","then","res","ok","Error","statusText","json","data","console","log","context","catch","err","message","setState","_this3","styleText","color","react_default","a","createElement","onSubmit","htmlFor","style","id","type","aria-label","aria-required","onChange","e","updateName","target","updateFolderId","map","folder","key","folder_name","updateContent","Component","contextType","ApiContext","AddFolder","folderName","handleNoteChange","handleAddFolder","validateFolderName","validFolder","NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","objectSpread","join","children","defaultProps","findNote","arguments","length","undefined","noteId","find","note","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","error","NoteListNav","_this$context","_this$context$folders","_this$context$notes","src_ErrorBoundary","NavLink","to","filter","countNotesForFolder","Link","react_fontawesome_index_es","icon","NotePageNav","match","params","findFolder","role","onClick","history","goBack","Note","handleClickDelete","content-type","Promise","reject","onDeleteNote","_this$props","format","NoteListMain","notesForFolder","getNotesForFolder","Number","Note_Note_Note","NotePageMain","handleDeleteNote","push","split","para","i","App","handleGetNotes","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.c7a14272.chunk.js","sourcesContent":["import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n  getNotes: () =>{}\n})","export default {\n  API_ENDPOINT: 'http://localhost:8000'\n}\n","import React from 'react';\nimport ApiContext from '../ApiContext';\nimport config from '../config'; \n\nclass AddNote extends React.Component {\n\n    static contextType = ApiContext;\n\n    state = {\n        nameNote: {value:''},\n        folderId: {value: 1},\n        content: {value: ''}\n    }\n\n    handleAddNote(nameNote, folderId, content) {\n        fetch(`${config.API_ENDPOINT}/notes`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"name\": nameNote.value,\n                \"modified\": new Date(),\n                \"folder_id\": folderId.value,\n                \"content\": content.value\n            })\n        })\n        .then(res => {\n            if(!res.ok){\n                throw new Error(res.statusText)\n            }\n            return res.json()\n        })\n        .then(data=>{\n            console.log(data)\n            this.context.getNotes();\n        })\n        .catch(err => err.message)\n    }\n\n    validateNoteName = (event) => {\n        event.preventDefault();\n        const validNote = this.state.nameNote.value;\n        if(validNote) {\n            return this.handleAddNote(this.state.nameNote, this.state.folderId, this.state.content)\n        } else {\n            alert('Note must have a title!')\n        }\n    }\n    \n    updateName(nameNote){\n        this.setState({nameNote: {value:nameNote}})   \n    }\n    updateFolderId(folderId){\n        this.setState({folderId: {value: folderId}})\n    }\n    updateContent(content){\n        this.setState({content: {value:content}})\n    }\n    \n\n\n    render() {\n        const styleText= {color: '#A9A9A9'}\n        return (\n            <div>\n                <form onSubmit={this.validateNoteName}>\n                    <label htmlFor=\"nameNote\"><span style={styleText}> Note Name Here</span></label>\n                    <input \n                    id=\"nameNote\" \n                    type=\"text\" \n                    aria-label=\"Due date for book return\" \n                    aria-required=\"true\" \n                    value={this.state.nameNote.value} \n                    onChange={e => this.updateName(e.target.value)}/>\n                    <label htmlFor=\"folderName\"><span style={styleText}>Select Here</span></label>\n                        <select id='folderName' \n                        onChange={event => this.updateFolderId(event.target.value)}>\n                            {this.context.folders.map(folder => {\n                                return <option key={folder.id} value={folder.id}> {folder.folder_name} </option>})}\n                        </select>\n                    <label htmlFor=\"content\"><span style={styleText}>Content Here</span></label>\n                    <input \n                    id=\"content\" type=\"text\"\n                    aria-label=\"Add the contents of your new note.\" \n                    aria-required=\"true\" \n                    value={this.state.content.value}\n                    onChange={e => this.updateContent(e.target.value)}\n                    />\n                    <button type=\"submit\"  \n                    >Add Note</button>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default AddNote;","import React, { Component } from 'react'\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n\nclass AddFolder extends Component {\n    static contextType = ApiContext\n\n    state = {\n        folderName: {value:''}\n    }\n\n    handleNoteChange = (event)=>{\n        this.setState({folderName: {value:event.target.value}});\n    }\n\n\n    handleAddFolder= (folderName) => {\n        fetch(`${config.API_ENDPOINT}/folders`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"folder_name\": folderName\n            })\n        })\n        .then(res => {\n            if(!res.ok){\n                throw new Error(res.statusText)\n            }\n            return res.json()\n        })\n        .then(data=>{\n            console.log(data)\n            console.log('note added!')\n            console.log(this.context)\n            this.context.getNotes();\n            console.log(this.context.getNotes)\n        })\n        .catch(err => err.message)\n    }\n\n    validateFolderName = (event) => {\n        event.preventDefault();\n        const validFolder = this.state.folderName.value;\n        if(validFolder) {\n            return this.handleAddFolder(validFolder);\n        } else {\n            return alert('Folder name is required');\n        }\n    }\n\n    \n\n    render() {\n        const styleText={color:\"#A9A9A9\"}\n        return (\n            <div>\n                <form onSubmit={this.validateFolderName}>\n                    <label htmlFor=\"folderName\"><span style={styleText}>Folder Name:</span></label>\n                    <input type=\"text\" id=\"folderName\" value={this.state.folderName.value} onChange={this.handleNoteChange}/>\n                    <button type=\"submit\" >Add Folder</button>\n                </form>\n            </div>\n        )\n    }\n\n\n}\n\nexport default AddFolder;","import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folder_id === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folder_id === folderId).length\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          hasError: false\n        };\n      }\n      static propTypes = {\n        children: PropTypes.element.isRequired\n      }\n\n      \n      static getDerivedStateFromError(error) {\n        return { hasError: true };\n      }\n      render() {\n        if (this.state.hasError) {      \n          return (\n            <h2>Error.</h2>\n          );\n        }\n        return this.props.children;\n      } \n}\n\nexport default ErrorBoundary;","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\nimport ErrorBoundary from '../ErrorBoundary'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <ErrorBoundary>\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.folder_name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n      </ErrorBoundary>\n    )\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\nimport PropTypes from 'prop-types';\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n\n  static propTypes = {\n    match: PropTypes.shape({\n      params:PropTypes.shape({\n        noteId: PropTypes.string,\n      })\n    }),\n    history: PropTypes.shape({\n      goBack: PropTypes.func.isRequired\n    })\n  }\n\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folder_id)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.folder_name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\nimport PropTypes from 'prop-types';\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static propTypes ={\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    modified: PropTypes.string.isRequired,\n    onDeleteNote: PropTypes.func.isRequired\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n\n    \n\n    return (\n     \n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\nimport ErrorBoundary from '../ErrorBoundary'\nimport PropTypes from 'prop-types';\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  static propTypes = {\n    match: PropTypes.shape({\n      params:PropTypes.shape({\n        folderId: PropTypes.string,\n      })\n    })\n  }\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes } = this.context\n    console.log('context', this.context)\n    const notesForFolder = getNotesForFolder(notes, Number(folderId))\n    console.log(notesForFolder);\n    return (\n      <ErrorBoundary>\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n      </ErrorBoundary>\n    )\n  }\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\nimport PropTypes from 'prop-types';\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  static propTypes = {\n    match: PropTypes.shape({\n      params:PropTypes.shape({\n        noteId: PropTypes.string,\n      })\n    })\n  }\n  \n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport AddNote from '../AddNote/AddNote';\nimport AddFolder from '../AddFolder/AddFolder';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\ncomponentDidMount(){\n    this.handleGetNotes()\n}\n    handleGetNotes = ()=>{\n        console.log('Fetching new info!')\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/notes`),\n            fetch(`${config.API_ENDPOINT}/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n\n                return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n                console.log('notes', notes)\n                console.log('folders', folders)\n                this.setState({notes, folders});\n            })\n            .catch(error => {\n                console.error({error});\n            });\n    }\n    \n    handleDeleteNote = noteId => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== noteId)\n        });\n    };\n\n    handleAddNote = (noteId) => {\n        this.setState({\n            notes: this.state.notes.map(note => note.id === noteId)\n        });\n    };\n\n    renderNavRoutes() {\n\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\n                <Route path=\"/add-note\" component={AddNote} />\n                <Route path=\"/add-folder\" component={AddFolder} />\n            </>\n        );\n    }\n\n    render() {\n        console.log('has error', this.state.hasError)\n        if(this.state.hasError){\n            return <h1>Error!</h1>\n        }\n        \n        const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            deleteNote: this.handleDeleteNote,\n            getNotes: this.handleGetNotes\n        };\n        return (\n            <ApiContext.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                            <FontAwesomeIcon icon=\"check-double\" />\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}